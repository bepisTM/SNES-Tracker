.EQU 	CONTROL 		$F1		; TIMER CONTROL, SNES REG CLEAR

.EQU	TIMERBASE		$FA
.EQU	TIMER0			$FA
.EQU	TIMER1			$FB
.EQU	TIMER2			$FC

.EQU	COUNTERBASE	$FD
.EQU	COUNTER0	$FD
.EQU	COUNTER1	$FE
.EQU	COUNTER2	$FF

.EQU	KON			$4C
.EQU	DSPADDR		$F2
.EQU	DSPVAL		$F3

.EQU	V0PL		$02
.EQU	V0PH		$03

.EQU	V1PL		$12
.EQU	V1PH		$13

.EQU	PATTERNPTR			$00
.EQU	PATTERNS			$02
.EQU	PATTERN0LEN			PATTERNS
.EQU 	PATTERN0PTR			PATTERNS+1 ; $02
.EQU	PATTERN0PTRLO		PATTERNS+2
.EQU	PATTERN0PTRHI		PATTERNS+2

.EQU	PATTERN1LEN			PATTERNS+3
.EQU 	PATTERN1PTR			PATTERNS+4 ; $02
.EQU	PATTERN1PTRLO		PATTERNS+4
.EQU	PATTERN1PTRHI		PATTERNS+5

.EQU	INVERSEPATTERNENTRYCOUNTER			$70
.EQU	PATTERNLISTNUMBERSCURRENTENTRY		$71

.EQU	TIMERSELECT			$80
.EQU	TIMERVALUE			$81
.EQU	TIMERCOUNTVALUE		$82 ; -$03
.EQU 	BPLAYANOTE			$85
.EQU	BKEYOFFNOTE			$86
.EQU	FIRSTPITCHWASNOT0	$87
.EQU	LOWPITCHTEMP		$88
.EQU	HIGHPITCHTEMP		$89

.EQU	VOICEENABLE			$8A

; PATTERN LIST ABSOLUTE RAM
.EQU	PATTERNLISTNUMBERS			$90
.EQU	PATTERNLISTNUMBERSLENGTH	$8F


.INCLUDE "defines.i"

.BANK 0 SLOT 0
.ORG $200
.SECTION "SPCCODE" FORCE


	
	
MAIN:
	CLRP
    
	MOV $F2, #$7D
	MOV $F3, #0

    MOV $F2, #$00       ; LEFT VOLUME = 127
    MOV $F3, #127
    MOV $F2, #$01       ; RIGHT VOLUME = 127 
    MOV $F3, #127
    
    
    ; DIR
    MOV $F2, #$5D   ; STARTING ADDRESS = $9000
    MOV $F3, #$90
    
	; DIR
	; FOR PIANO
    MOV $F2, #$04       ; SOURCE NUMBER = 0 
    MOV $F3, #$00
    MOV A, #$00
    MOV !$9000, A
    MOV A, #$10
    MOV !$9001, A
    MOV A, #$00 ;#$91
    MOV !$9002, A
    MOV A, #$10    ; #$16
    MOV !$9003, A
	
	; FOR BASS
    MOV $F2, #$14       ; SOURCE NUMBER = 1
    MOV $F3, #$01
    MOV A, #$00
    MOV !$9004, A
    MOV A, #$40
    MOV !$9005, A
    MOV A, #$00 ;#$91
    MOV !$9006, A
    MOV A, #$40    ; #$16
    MOV !$9007, A
    
    ; VOICE 0 PIANO
    MOV $F2, #$05 
    MOV $F3, #$00 
    MOV $F2, #$07 
    MOV $F3, #$1F ;#127   ; SET GAIN, DIRECT MODE (BIT7=0), FULL VOLUME
    ; VOICE 1 BASS
    MOV $F2, #$15 
    MOV $F3, #$00
    MOV $F2, #$17 
    MOV $F3, #$1F ;#127   ; SET GAIN, DIRECT MODE (BIT7=0), FULL VOLUME
	
    MOV $F2, #$0C 
    MOV $F3, #127   ; L/R VOL 100% BOTH VOICES 
    MOV $F2, #$1C
    MOV $F3, #127
    
    MOV $F2, #$6C   ; TURN OFF MUTE
    MOV $F3, #%00100000
	
	; THIS WASN'T USED IN THE PATTERN DEMO
	; INITIALIZE THE PATTERNLISTNUMBERS
	MOV PATTERNLISTNUMBERSLENGTH, #4
	MOV X, #0
	MOV A, #0
	MOV PATTERNLISTNUMBERS+X, A
	INC X
	MOV A, #1
	MOV PATTERNLISTNUMBERS+X, A
	INC X
	MOV A, #1
	MOV PATTERNLISTNUMBERS+X, A
	INC X
	MOV A, #1
	MOV PATTERNLISTNUMBERS+X, A
	; LENGTH 3, PATTERN 0, 1 ,1
	;MOV PATTERNLISTNUMBERSCURRENTENTRY, #0
	
	
	
	
	; INIT PATTERN 0 VOICE 0
	; LETS PLAY SOMETHING AT 0 AND NOTHING FOR ANYTHING ELSE
	; PATTERN FORMAT: NOTE, INSTRUMENT, VOLUME	; 4 BYTES
	; LOOK-UP TABLE FOR KEYBOARD KEYS 0-88
	
	; INIT PATTERN 0 TABLE ENTRY
	MOV A, #8
	MOV PATTERN0LEN, A
	MOV A, #00
	MOV PATTERN0PTRLO, A
	MOV A, #$82
	MOV PATTERN0PTRHI, A
	
	; INIT PATTERN 1 TABLE ENTRY
	MOV A, #8
	MOV PATTERN1LEN, A
	MOV A, #00
	MOV PATTERN1PTRLO, A
	MOV A, #$83
	MOV PATTERN1PTRHI, A
	
	CALL !INITPATTERNS
	
	; OK THE PATTERN IS READY
	; LETS ITERATE THROUGH A PATTERN
	; 
	
	
	;===
	; STORE SOME FAKE VALUES FOR THE TIMERS
	MOV A, #TIMER0
	MOV TIMERSELECT, A
	MOV A, #$90
	MOV TIMERVALUE, A
	MOV A, #5
	MOV TIMERCOUNTVALUE, A
	; THESE WOULD NORMALLY BE SELECTED BY THE USER IN THE GUI
	
	; SETUP TIMER
	MOV X, TIMERSELECT
	MOV A,TIMERVALUE
	MOV (X),A
	; THAT WILL BE THE STANDARD CONVERSION CODE FOR TIMER SETUPS
	
	; START TIMER
	MOV CONTROL, #$01	; THIS WILL DESTROY ALL OTHER TIMERS


	; TIMER IS STARTED
STARTOVER:
	MOV PATTERNLISTNUMBERSCURRENTENTRY, #0
PATTERNLISTLOOP:
	; LOAD ENTRY(X) OF PATTERNLISTNUMBERS
	MOV X, PATTERNLISTNUMBERSCURRENTENTRY
	CMP X, PATTERNLISTNUMBERSLENGTH
	BEQ STARTOVER	; NOT CODED YET
	MOV A, PATTERNLISTNUMBERS+X
	; HOW TO CONVERT PATTERN NUMBER TO PATTERN TABLE LOCATION
	; PATTERNS START AT PATTERNS AND ARE 3 BYTES EACH
	MOV X,A
	MOV A,#0
GETINDEX:
	CMP X,#0
	BEQ HAVEINDEXINA 
	CLRC
	ADC A,#3
	DEC X
	BRA GETINDEX
	
HAVEINDEXINA:
	CLRC 
	ADC A,#PATTERNS
	MOV X,A
	
	
	MOV A,(X)+	; PATTERN LENGTH
	MOV !INVERSEPATTERNENTRYCOUNTER, A
	MOV A,(X)+
	MOV PATTERNPTR, A
	MOV A,(X)+
	MOV PATTERNPTR+1, A
	
	MOV Y, #0
	
	CALL !PATTERNLOOP
	INC PATTERNLISTNUMBERSCURRENTENTRY
	BRA PATTERNLISTLOOP
	
	; DO THE LOOP FOR VOICES 0-7
PATTERNLOOP:
	CALL !TIMERWAIT
	MOV A,#1
	MOV BPLAYANOTE, A
	MOV A,#0
	MOV BKEYOFFNOTE, A
	
	; PITCH CODE
	MOV A, [PATTERNPTR]+Y
	INC Y
	MOV LOWPITCHTEMP, A
	MOV A, [PATTERNPTR]+Y
	INC Y
	MOV HIGHPITCHTEMP, A
	
	; COMPARE FOR 0101
	CMP A, #01
	BNE CMP2
	MOV A, LOWPITCHTEMP
	CMP A, #01
	BNE CMP2
	MOV BKEYOFFNOTE, #1
	BRA P2
CMP2:
	CMP A, #00
	BNE SETPITCH
	MOV A, LOWPITCHTEMP
	CMP A,#00
	BNE SETPITCH
	MOV BPLAYANOTE, #0
	BRA P2
SETPITCH:
	MOV A, LOWPITCHTEMP
	MOV X, #V0PL
	CALL !WDSPX
	INC X
	MOV A, HIGHPITCHTEMP
	CALL !WDSPX
P2:
	; SAMPLE #
	MOV A, [PATTERNPTR]+Y
	INC Y
	MOV X,#$04
	CALL !WDSPX
	
	MOV A, [PATTERNPTR]+Y
	INC Y
	; VOLUME
	MOV X,#0
	CALL !WDSPX
	MOV X,#1
	CALL !WDSPX
	
	MOV A,BKEYOFFNOTE
	BEQ CHECKFORPLAYANOTE
	MOV A, #1	; PLAY BOTH
	CALL !KEYOFF
	BRA _FINISHUP
CHECKFORPLAYANOTE:	
	MOV A, BPLAYANOTE
	BEQ _FINISHUP
	MOV A, #1
	CALL !KEYON
_FINISHUP:
	DEC INVERSEPATTERNENTRYCOUNTER
	BEQ _DONE 
	JMP !PATTERNLOOP
_DONE:
	RET

TIMERWAIT:
	CLRC
	MOV A, #0
WAIT_FOR_TICK:

	ADC A,COUNTER0	; READ COUNTER
	CMP A,TIMERCOUNTVALUE
						; 1 SECOND = 32MS MAX TIMER VALUE * 32 = 1024 MS = 1.024 S
	BCC WAIT_FOR_TICK
	RET
    
    
; ====== WRITE A BYTE TO THE S-SDSP =========
WDSP:
    MOV !$00F2,Y
    MOV !$00F3,A
    RET
; ====== WRITE A BYTE TO THE S-SDSP =========
WDSPX:
    MOV !$00F2,X
    MOV !$00F3,A
    RET
	
KEYON:
	; KEY ON
	MOV $F2, #$4C
	MOV $F3, A
	RET
	
KEYOFF:
	MOV $F2, #$5C
	MOV $F3, A
	RET
    

INITPATTERNS:
	; INIT PATTERN 0 PATTERN DATA
	
	MOV Y, #0
	
	; 1
	MOV A, #$10
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A, #$10
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A,#01
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A,#127
	MOV [PATTERN0PTR]+Y,A
	INC Y
	
	; 2
	MOV A, #00
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A, #01
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A,#127
	MOV [PATTERN0PTR]+Y,A
	INC Y

	;3
	MOV A, #$10
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A, #$18
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A,#01
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A,#127
	MOV [PATTERN0PTR]+Y,A
	INC Y

	;4
	MOV A, #00
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A,#1
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A,#127
	MOV [PATTERN0PTR]+Y,A
	INC Y

	;5
	MOV A, #$10
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A, #$20
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A,#01
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A,#127
	MOV [PATTERN0PTR]+Y,A
	INC Y

	;6
	MOV A, #00
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A, #1
	MOV [PATTERN0PTR]+Y,A
	INC Y
	MOV A,#127
	MOV [PATTERN0PTR]+Y,A
	INC Y
	
	;7
	MOV A, #$10
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A, #$18
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A,#01
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A,#127
	MOV [PATTERN0PTR]+Y,A
	INC Y
	
	;8
	MOV A, #$00
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A, #$01
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A,#01
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV A,#127
	MOV [PATTERN0PTR]+Y,A
	INC Y

	MOV Y,#0

	; INIT PATTERN 1
	
	; 1
	MOV Y, #0
	MOV A, #$10
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #$10
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A,#01
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A,#127
	MOV [PATTERN1PTR]+Y,A
	INC Y
	
	MOV A, #00
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A,#1
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #127
	MOV [PATTERN1PTR]+Y,A
	INC Y




	MOV A, #00
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A,#1
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #127
	MOV [PATTERN1PTR]+Y,A
	INC Y



	MOV A, #00
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #1
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #127
	MOV [PATTERN1PTR]+Y,A
	INC Y

	MOV A, #$10
	MOV [PATTERN1PTR]+Y,A
	INC Y

	MOV A, #$18
	MOV [PATTERN1PTR]+Y,A
	INC Y

	MOV A,#01
	MOV [PATTERN1PTR]+Y,A
	INC Y

	MOV A,#127
	MOV [PATTERN1PTR]+Y,A
	INC Y

	MOV A,#0
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #1
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #127
	MOV [PATTERN1PTR]+Y,A
	INC Y




	MOV A, #00
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A,#1
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #127
	MOV [PATTERN1PTR]+Y,A
	INC Y



	MOV A, #00
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #1
	MOV [PATTERN1PTR]+Y,A
	INC Y
	MOV A, #127
	MOV [PATTERN1PTR]+Y,A
	INC Y
	RET

.ENDS
;EOF